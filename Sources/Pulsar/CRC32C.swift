// Copyright 2024 Felix Ruppert
//
// Licensed under the Apache License, Version 2.0 (the License );
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an AS IS BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import NIOCore

struct CRC32C {
	private static let table: [UInt32] = [0, 4_067_132_163, 3_778_769_143, 324_072_436, 3_348_797_215, 904_991_772, 648_144_872, 3_570_033_899, 2_329_499_855, 2_024_987_596, 1_809_983_544, 2_575_936_315, 1_296_289_744, 3_207_089_363, 2_893_594_407, 1_578_318_884, 274_646_895, 3_795_141_740, 4_049_975_192, 51_262_619, 3_619_967_088, 632_279_923, 922_689_671, 3_298_075_524, 2_592_579_488, 1_760_304_291, 2_075_979_607, 2_312_596_564, 1_562_183_871, 2_943_781_820, 3_156_637_768, 1_313_733_451, 549_293_790, 3_537_243_613, 3_246_849_577, 871_202_090, 3_878_099_393, 357_341_890, 102_525_238, 4_101_499_445, 2_858_735_121, 1_477_399_826, 1_264_559_846, 3_107_202_533, 1_845_379_342, 2_677_391_885, 2_361_733_625, 2_125_378_298, 820_201_905, 3_263_744_690, 3_520_608_582, 598_981_189, 4_151_959_214, 85_089_709, 373_468_761, 3_827_903_834, 3_124_367_742, 1_213_305_469, 1_526_817_161, 2_842_354_314, 2_107_672_161, 2_412_447_074, 2_627_466_902, 1_861_252_501, 1_098_587_580, 3_004_210_879, 2_688_576_843, 1_378_610_760, 2_262_928_035, 1_955_203_488, 1_742_404_180, 2_511_436_119, 3_416_409_459, 969_524_848, 714_683_780, 3_639_785_095, 205_050_476, 4_266_873_199, 3_976_438_427, 526_918_040, 1_361_435_347, 2_739_821_008, 2_954_799_652, 1_114_974_503, 2_529_119_692, 1_691_668_175, 2_005_155_131, 2_247_081_528, 3_690_758_684, 697_762_079, 986_182_379, 3_366_744_552, 476_452_099, 3_993_867_776, 4_250_756_596, 255_256_311, 1_640_403_810, 2_477_592_673, 2_164_122_517, 1_922_457_750, 2_791_048_317, 1_412_925_310, 1_197_962_378, 3_037_525_897, 3_944_729_517, 427_051_182, 170_179_418, 4_165_941_337, 746_937_522, 3_740_196_785, 3_451_792_453, 1_070_968_646, 1_905_808_397, 2_213_795_598, 2_426_610_938, 1_657_317_369, 3_053_634_322, 1_147_748_369, 1_463_399_397, 2_773_627_110, 4_215_344_322, 153_784_257, 444_234_805, 3_893_493_558, 1_021_025_245, 3_467_647_198, 3_722_505_002, 797_665_321, 2_197_175_160, 1_889_384_571, 1_674_398_607, 2_443_626_636, 1_164_749_927, 3_070_701_412, 2_757_221_520, 1_446_797_203, 137_323_447, 4_198_817_972, 3_910_406_976, 461_344_835, 3_484_808_360, 1_037_989_803, 781_091_935, 3_705_997_148, 2_460_548_119, 1_623_424_788, 1_939_049_696, 2_180_517_859, 1_429_367_560, 2_807_687_179, 3_020_495_871, 1_180_866_812, 410_100_952, 3_927_582_683, 4_182_430_767, 186_734_380, 3_756_733_383, 763_408_580, 1_053_836_080, 3_434_856_499, 2_722_870_694, 1_344_288_421, 1_131_464_017, 2_971_354_706, 1_708_204_729, 2_545_590_714, 2_229_949_006, 1_988_219_213, 680_717_673, 3_673_779_818, 3_383_336_350, 1_002_577_565, 4_010_310_262, 493_091_189, 238_226_049, 4_233_660_802, 2_987_750_089, 1_082_061_258, 1_395_524_158, 2_705_686_845, 1_972_364_758, 2_279_892_693, 2_494_862_625, 1_725_896_226, 952_904_198, 3_399_985_413, 3_656_866_545, 731_699_698, 4_283_874_585, 222_117_402, 510_512_622, 3_959_836_397, 3_280_807_620, 837_199_303, 582_374_963, 3_504_198_960, 68_661_723, 4_135_334_616, 3_844_915_500, 390_545_967, 1_230_274_059, 3_141_532_936, 2_825_850_620, 1_510_247_935, 2_395_924_756, 2_091_215_383, 1_878_366_691, 2_644_384_480, 3_553_878_443, 565_732_008, 854_102_364, 3_229_815_391, 340_358_836, 3_861_050_807, 4_117_890_627, 119_113_024, 1_493_875_044, 2_875_275_879, 3_090_270_611, 1_247_431_312, 2_660_249_211, 1_828_433_272, 2_141_937_292, 2_378_227_087, 3_811_616_794, 291_187_481, 34_330_861, 4_032_846_830, 615_137_029, 3_603_020_806, 3_314_634_738, 939_183_345, 1_776_939_221, 2_609_017_814, 2_295_496_738, 2_058_945_313, 2_926_798_794, 1_545_135_305, 1_330_124_605, 3_173_225_534, 4_084_100_981, 17_165_430, 307_568_514, 3_762_199_681, 888_469_610, 3_332_340_585, 3_587_147_933, 665_062_302, 2_042_050_490, 2_346_497_209, 2_559_330_125, 1_793_573_966, 3_190_661_285, 1_279_665_062, 1_595_330_642, 2_910_671_697]

	static func checksum(_ data: ByteBuffer) -> UInt32 {
		let table = CRC32C.table
		var crc: UInt32 = 0xFFFF_FFFF

		for byte in data.readableBytesView {
			let index = Int((crc ^ UInt32(byte)) & 0xFF)
			crc = (crc >> 8) ^ table[index]
		}

		return crc ^ 0xFFFF_FFFF
	}
}
